package org.tsxuehu.pm.dao.dbobject;

import java.util.ArrayList;
import java.util.List;

public class GroupBranchRelationDOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    public GroupBranchRelationDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBranchidIsNull() {
            addCriterion("branchId is null");
            return (Criteria) this;
        }

        public Criteria andBranchidIsNotNull() {
            addCriterion("branchId is not null");
            return (Criteria) this;
        }

        public Criteria andBranchidEqualTo(Long value) {
            addCriterion("branchId =", value, "branchid");
            return (Criteria) this;
        }

        public Criteria andBranchidNotEqualTo(Long value) {
            addCriterion("branchId <>", value, "branchid");
            return (Criteria) this;
        }

        public Criteria andBranchidGreaterThan(Long value) {
            addCriterion("branchId >", value, "branchid");
            return (Criteria) this;
        }

        public Criteria andBranchidGreaterThanOrEqualTo(Long value) {
            addCriterion("branchId >=", value, "branchid");
            return (Criteria) this;
        }

        public Criteria andBranchidLessThan(Long value) {
            addCriterion("branchId <", value, "branchid");
            return (Criteria) this;
        }

        public Criteria andBranchidLessThanOrEqualTo(Long value) {
            addCriterion("branchId <=", value, "branchid");
            return (Criteria) this;
        }

        public Criteria andBranchidIn(List<Long> values) {
            addCriterion("branchId in", values, "branchid");
            return (Criteria) this;
        }

        public Criteria andBranchidNotIn(List<Long> values) {
            addCriterion("branchId not in", values, "branchid");
            return (Criteria) this;
        }

        public Criteria andBranchidBetween(Long value1, Long value2) {
            addCriterion("branchId between", value1, value2, "branchid");
            return (Criteria) this;
        }

        public Criteria andBranchidNotBetween(Long value1, Long value2) {
            addCriterion("branchId not between", value1, value2, "branchid");
            return (Criteria) this;
        }

        public Criteria andGroupidIsNull() {
            addCriterion("groupId is null");
            return (Criteria) this;
        }

        public Criteria andGroupidIsNotNull() {
            addCriterion("groupId is not null");
            return (Criteria) this;
        }

        public Criteria andGroupidEqualTo(Long value) {
            addCriterion("groupId =", value, "groupid");
            return (Criteria) this;
        }

        public Criteria andGroupidNotEqualTo(Long value) {
            addCriterion("groupId <>", value, "groupid");
            return (Criteria) this;
        }

        public Criteria andGroupidGreaterThan(Long value) {
            addCriterion("groupId >", value, "groupid");
            return (Criteria) this;
        }

        public Criteria andGroupidGreaterThanOrEqualTo(Long value) {
            addCriterion("groupId >=", value, "groupid");
            return (Criteria) this;
        }

        public Criteria andGroupidLessThan(Long value) {
            addCriterion("groupId <", value, "groupid");
            return (Criteria) this;
        }

        public Criteria andGroupidLessThanOrEqualTo(Long value) {
            addCriterion("groupId <=", value, "groupid");
            return (Criteria) this;
        }

        public Criteria andGroupidIn(List<Long> values) {
            addCriterion("groupId in", values, "groupid");
            return (Criteria) this;
        }

        public Criteria andGroupidNotIn(List<Long> values) {
            addCriterion("groupId not in", values, "groupid");
            return (Criteria) this;
        }

        public Criteria andGroupidBetween(Long value1, Long value2) {
            addCriterion("groupId between", value1, value2, "groupid");
            return (Criteria) this;
        }

        public Criteria andGroupidNotBetween(Long value1, Long value2) {
            addCriterion("groupId not between", value1, value2, "groupid");
            return (Criteria) this;
        }

        public Criteria andBuildTagIsNull() {
            addCriterion("build_tag is null");
            return (Criteria) this;
        }

        public Criteria andBuildTagIsNotNull() {
            addCriterion("build_tag is not null");
            return (Criteria) this;
        }

        public Criteria andBuildTagEqualTo(String value) {
            addCriterion("build_tag =", value, "buildTag");
            return (Criteria) this;
        }

        public Criteria andBuildTagNotEqualTo(String value) {
            addCriterion("build_tag <>", value, "buildTag");
            return (Criteria) this;
        }

        public Criteria andBuildTagGreaterThan(String value) {
            addCriterion("build_tag >", value, "buildTag");
            return (Criteria) this;
        }

        public Criteria andBuildTagGreaterThanOrEqualTo(String value) {
            addCriterion("build_tag >=", value, "buildTag");
            return (Criteria) this;
        }

        public Criteria andBuildTagLessThan(String value) {
            addCriterion("build_tag <", value, "buildTag");
            return (Criteria) this;
        }

        public Criteria andBuildTagLessThanOrEqualTo(String value) {
            addCriterion("build_tag <=", value, "buildTag");
            return (Criteria) this;
        }

        public Criteria andBuildTagLike(String value) {
            addCriterion("build_tag like", value, "buildTag");
            return (Criteria) this;
        }

        public Criteria andBuildTagNotLike(String value) {
            addCriterion("build_tag not like", value, "buildTag");
            return (Criteria) this;
        }

        public Criteria andBuildTagIn(List<String> values) {
            addCriterion("build_tag in", values, "buildTag");
            return (Criteria) this;
        }

        public Criteria andBuildTagNotIn(List<String> values) {
            addCriterion("build_tag not in", values, "buildTag");
            return (Criteria) this;
        }

        public Criteria andBuildTagBetween(String value1, String value2) {
            addCriterion("build_tag between", value1, value2, "buildTag");
            return (Criteria) this;
        }

        public Criteria andBuildTagNotBetween(String value1, String value2) {
            addCriterion("build_tag not between", value1, value2, "buildTag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table group_branch_relation
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table group_branch_relation
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}