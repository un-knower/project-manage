<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tsxuehu.pm.dao.mapper.GroupDOMapper">
  <resultMap id="BaseResultMap" type="org.tsxuehu.pm.dao.dbobject.GroupDO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="servers" jdbcType="VARCHAR" property="servers" />
    <result column="integrationBranch" jdbcType="VARCHAR" property="integrationbranch" />
    <result column="projectId" jdbcType="BIGINT" property="projectid" />
    <result column="branchId" jdbcType="BIGINT" property="branchid" />
    <result column="applicationId" jdbcType="BIGINT" property="applicationid" />
    <result column="configuration" jdbcType="VARCHAR" property="configuration" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="buildPhrase" jdbcType="VARCHAR" property="buildphrase" />
    <result column="buidRate" jdbcType="INTEGER" property="buidrate" />
    <result column="pushPhrase" jdbcType="VARCHAR" property="pushphrase" />
    <result column="pushRate" jdbcType="INTEGER" property="pushrate" />
    <result column="repositoryLocation" jdbcType="VARCHAR" property="repositorylocation" />
    <result column="needReintegration" jdbcType="TINYINT" property="needreintegration" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, description, servers, integrationBranch, projectId, branchId, applicationId, 
    configuration, type, buildPhrase, buidRate, pushPhrase, pushRate, repositoryLocation, 
    needReintegration
  </sql>
  <select id="selectByExample" parameterType="org.tsxuehu.pm.dao.dbobject.GroupDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from group
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from group
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.tsxuehu.pm.dao.dbobject.GroupDOExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.tsxuehu.pm.dao.dbobject.GroupDO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into group (name, description, servers, 
      integrationBranch, projectId, branchId, 
      applicationId, configuration, type, 
      buildPhrase, buidRate, pushPhrase, 
      pushRate, repositoryLocation, needReintegration
      )
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{servers,jdbcType=VARCHAR}, 
      #{integrationbranch,jdbcType=VARCHAR}, #{projectid,jdbcType=BIGINT}, #{branchid,jdbcType=BIGINT}, 
      #{applicationid,jdbcType=BIGINT}, #{configuration,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{buildphrase,jdbcType=VARCHAR}, #{buidrate,jdbcType=INTEGER}, #{pushphrase,jdbcType=VARCHAR}, 
      #{pushrate,jdbcType=INTEGER}, #{repositorylocation,jdbcType=VARCHAR}, #{needreintegration,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.tsxuehu.pm.dao.dbobject.GroupDO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="servers != null">
        servers,
      </if>
      <if test="integrationbranch != null">
        integrationBranch,
      </if>
      <if test="projectid != null">
        projectId,
      </if>
      <if test="branchid != null">
        branchId,
      </if>
      <if test="applicationid != null">
        applicationId,
      </if>
      <if test="configuration != null">
        configuration,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="buildphrase != null">
        buildPhrase,
      </if>
      <if test="buidrate != null">
        buidRate,
      </if>
      <if test="pushphrase != null">
        pushPhrase,
      </if>
      <if test="pushrate != null">
        pushRate,
      </if>
      <if test="repositorylocation != null">
        repositoryLocation,
      </if>
      <if test="needreintegration != null">
        needReintegration,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="servers != null">
        #{servers,jdbcType=VARCHAR},
      </if>
      <if test="integrationbranch != null">
        #{integrationbranch,jdbcType=VARCHAR},
      </if>
      <if test="projectid != null">
        #{projectid,jdbcType=BIGINT},
      </if>
      <if test="branchid != null">
        #{branchid,jdbcType=BIGINT},
      </if>
      <if test="applicationid != null">
        #{applicationid,jdbcType=BIGINT},
      </if>
      <if test="configuration != null">
        #{configuration,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="buildphrase != null">
        #{buildphrase,jdbcType=VARCHAR},
      </if>
      <if test="buidrate != null">
        #{buidrate,jdbcType=INTEGER},
      </if>
      <if test="pushphrase != null">
        #{pushphrase,jdbcType=VARCHAR},
      </if>
      <if test="pushrate != null">
        #{pushrate,jdbcType=INTEGER},
      </if>
      <if test="repositorylocation != null">
        #{repositorylocation,jdbcType=VARCHAR},
      </if>
      <if test="needreintegration != null">
        #{needreintegration,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.tsxuehu.pm.dao.dbobject.GroupDOExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update group
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.servers != null">
        servers = #{record.servers,jdbcType=VARCHAR},
      </if>
      <if test="record.integrationbranch != null">
        integrationBranch = #{record.integrationbranch,jdbcType=VARCHAR},
      </if>
      <if test="record.projectid != null">
        projectId = #{record.projectid,jdbcType=BIGINT},
      </if>
      <if test="record.branchid != null">
        branchId = #{record.branchid,jdbcType=BIGINT},
      </if>
      <if test="record.applicationid != null">
        applicationId = #{record.applicationid,jdbcType=BIGINT},
      </if>
      <if test="record.configuration != null">
        configuration = #{record.configuration,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.buildphrase != null">
        buildPhrase = #{record.buildphrase,jdbcType=VARCHAR},
      </if>
      <if test="record.buidrate != null">
        buidRate = #{record.buidrate,jdbcType=INTEGER},
      </if>
      <if test="record.pushphrase != null">
        pushPhrase = #{record.pushphrase,jdbcType=VARCHAR},
      </if>
      <if test="record.pushrate != null">
        pushRate = #{record.pushrate,jdbcType=INTEGER},
      </if>
      <if test="record.repositorylocation != null">
        repositoryLocation = #{record.repositorylocation,jdbcType=VARCHAR},
      </if>
      <if test="record.needreintegration != null">
        needReintegration = #{record.needreintegration,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update group
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      servers = #{record.servers,jdbcType=VARCHAR},
      integrationBranch = #{record.integrationbranch,jdbcType=VARCHAR},
      projectId = #{record.projectid,jdbcType=BIGINT},
      branchId = #{record.branchid,jdbcType=BIGINT},
      applicationId = #{record.applicationid,jdbcType=BIGINT},
      configuration = #{record.configuration,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      buildPhrase = #{record.buildphrase,jdbcType=VARCHAR},
      buidRate = #{record.buidrate,jdbcType=INTEGER},
      pushPhrase = #{record.pushphrase,jdbcType=VARCHAR},
      pushRate = #{record.pushrate,jdbcType=INTEGER},
      repositoryLocation = #{record.repositorylocation,jdbcType=VARCHAR},
      needReintegration = #{record.needreintegration,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.tsxuehu.pm.dao.dbobject.GroupDO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update group
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="servers != null">
        servers = #{servers,jdbcType=VARCHAR},
      </if>
      <if test="integrationbranch != null">
        integrationBranch = #{integrationbranch,jdbcType=VARCHAR},
      </if>
      <if test="projectid != null">
        projectId = #{projectid,jdbcType=BIGINT},
      </if>
      <if test="branchid != null">
        branchId = #{branchid,jdbcType=BIGINT},
      </if>
      <if test="applicationid != null">
        applicationId = #{applicationid,jdbcType=BIGINT},
      </if>
      <if test="configuration != null">
        configuration = #{configuration,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="buildphrase != null">
        buildPhrase = #{buildphrase,jdbcType=VARCHAR},
      </if>
      <if test="buidrate != null">
        buidRate = #{buidrate,jdbcType=INTEGER},
      </if>
      <if test="pushphrase != null">
        pushPhrase = #{pushphrase,jdbcType=VARCHAR},
      </if>
      <if test="pushrate != null">
        pushRate = #{pushrate,jdbcType=INTEGER},
      </if>
      <if test="repositorylocation != null">
        repositoryLocation = #{repositorylocation,jdbcType=VARCHAR},
      </if>
      <if test="needreintegration != null">
        needReintegration = #{needreintegration,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.tsxuehu.pm.dao.dbobject.GroupDO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update group
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      servers = #{servers,jdbcType=VARCHAR},
      integrationBranch = #{integrationbranch,jdbcType=VARCHAR},
      projectId = #{projectid,jdbcType=BIGINT},
      branchId = #{branchid,jdbcType=BIGINT},
      applicationId = #{applicationid,jdbcType=BIGINT},
      configuration = #{configuration,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      buildPhrase = #{buildphrase,jdbcType=VARCHAR},
      buidRate = #{buidrate,jdbcType=INTEGER},
      pushPhrase = #{pushphrase,jdbcType=VARCHAR},
      pushRate = #{pushrate,jdbcType=INTEGER},
      repositoryLocation = #{repositorylocation,jdbcType=VARCHAR},
      needReintegration = #{needreintegration,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>